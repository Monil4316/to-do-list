import * as React from 'react';
import Button from '@mui/material/Button';
import { styled } from '@mui/material/styles';
import Dialog from '@mui/material/Dialog';
import DialogTitle from '@mui/material/DialogTitle';
import DialogContent from '@mui/material/DialogContent';
import DialogActions from '@mui/material/DialogActions';
import IconButton from '@mui/material/IconButton';
import CloseIcon from '@mui/icons-material/Close';
import Typography from '@mui/material/Typography';
import Box from '@mui/material/Box';
import InputLabel from '@mui/material/InputLabel';
import MenuItem from '@mui/material/MenuItem';
import FormControl from '@mui/material/FormControl';
import Select from '@mui/material/Select';
import TextField from '@mui/material/TextField';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TableRow from '@mui/material/TableRow';
import Paper from '@mui/material/Paper';
import DeleteIcon from '@mui/icons-material/Delete';


const BootstrapDialog = styled(Dialog)(({ theme }) => ({
  '& .MuiDialogContent-root': {
    padding: theme.spacing(2),
  },
  '& .MuiDialogActions-root': {
    padding: theme.spacing(1),
  },
}));

export default function CustomizedDialogs() {
  const [open, setOpen] = React.useState(false);
  const [type, setType] = React.useState("Debit");
  const [amount, setAmount] = React.useState('');
  const [name, setName] = React.useState('');
  const [srno, setSrno] = React.useState('');
  const [description, setDescription] = React.useState('');
  const [rows, setRows] = React.useState([]);
  const [update, doUpdate] = React.useState(true)
  const handleClickOpen = () => {
    setOpen(true);
  };
  const handleClose = () => {
    setOpen(false);
  };
  const handleChange = (e) => {
    setType(e.target.value);
  }
  const handleSave = () => {
    let arr = rows
    arr.push({srno,name,amount , type, description})
    // setRows([...rows, {srno,name,amount, type, description }]);
    setRows(arr)
    setAmount('');
    setDescription('');
    setName('')
    setOpen(false);
  };
  return (
    <div style = {{margin:"1%"}} >
      <Button variant="contained" onClick={handleClickOpen}>
       Add
      </Button>
      <BootstrapDialog
        onClose={handleClose}
        aria-labelledby="customized-dialog-title"
        open={open}
      >
        <DialogTitle sx={{ m: 0, p: 2 }} id="customized-dialog-title">
         Income & Expence
        </DialogTitle>
        <IconButton
          aria-label="close"
          onClick={handleClose}
          sx={{
            position: 'absolute',
            right: 8,
            top: 8,
            color: (theme) => theme.palette.grey[500],
          }}
        >
          <CloseIcon />
        </IconButton>
        <DialogContent dividers style = {{margin:"3%"}}>
       
        <TextField
            id="standard-basic"
            label="SrNo"
            variant="standard"
            type="number"
            value={srno}
            onChange={(e) => setSrno(e.target.value)}
            style={{ margin: "1%" }}
            fullWidth
          />
          <TextField
            id="standard-basic"
            label="Name"
            variant="standard"
            type="text"
            value={name}
            onChange={(e) => setName(e.target.value)}
            style={{ margin: "1%" }}
            fullWidth
          />
        <TextField
            id="standard-basic"
            label="Amount"
            variant="standard"
            type="number"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
            style={{ margin: "1%" }}
            fullWidth
          />
        <FormControl fullWidth  style = {{marginTop:"4%",}}>
        <InputLabel id="demo-simple-select-label">Transaction Type</InputLabel>
        <Select
          //  style = {{margin:"1%",}}
          labelId="demo-simple-select-label"
          id="demo-simple-select"
          value={type}
          label="Trancetion type"
          onChange={handleChange}
          
          
        >
          <MenuItem value={"Debit"}>Debit</MenuItem>
          <MenuItem value={"Credit"}>Credit</MenuItem>
        </Select>
      </FormControl>
        <TextField
          id="outlined-multiline-static"
          label="Remarks"
          multiline
          variant="standard"
          rows={4}
          onChange={(e) => setDescription(e.target.value)}
          // defaultValue="Default Value"
          style = {{margin:"1%"}}
          fullWidth
        />
        </DialogContent>
        <DialogActions>
          <Button variant="contained" autoFocus onClick={handleSave}>
            Save
          </Button>
        </DialogActions>
      </BootstrapDialog>
      <TableContainer component={Paper}>
    <Table sx={{ minWidth: 650 }} size="small" aria-label="a dense table">
      <TableHead>
        <TableRow>
        <TableCell>SR No</TableCell>
        <TableCell align="center">Name</TableCell>
          <TableCell align="center">Amount</TableCell>
          <TableCell align="center">Debit/Credit</TableCell>
          <TableCell align="center">Description</TableCell>
          <TableCell align="right">Actions</TableCell>
        </TableRow>
      </TableHead>
      <TableBody>
        {rows.map((row,index) => (
          <TableRow
            key={index}
            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
          >
            <TableCell component="th" scope="row">
              
              {row.srno}
              {/* {row.name}
              {row.name} */}
            </TableCell>
            <TableCell align="center">{row.name}</TableCell>
            
            <TableCell align="center">{row.amount}</TableCell>
            <TableCell align="center">{row.type}</TableCell>
           <TableCell align="center">{row.description}</TableCell>
           <TableCell align="right">
            <Button variant="outlined" startIcon={<DeleteIcon />} onClick={()=>{
              let arr = rows;
              arr.splice(index, 1);
              setRows(arr)
              doUpdate(!update)
            }}>Delete</Button>
            <Button>Edit</Button>
           </TableCell>
          </TableRow>
        ))}
      </TableBody>
    </Table>
  </TableContainer>
    </div>
  );
}
